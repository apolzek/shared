version: '3'

services:

  #############
  ## Traefik ##
  #############

  traefik:
    image: traefik:v2.10
    command: --api.insecure=true --providers.docker
    networks:
      - reverse-proxy-traefik
    labels:
      - "traefik.enable=true"
    ports:
      - "80:80" # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api.insecure=true)
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  #########################
  ## front-a and front-b ##
  #########################
  
  front-a:
    image: nginx
    ports:
     - "9001:80"
    networks:
      - reverse-proxy-traefik
    environment:
     - NGINX_PORT=80
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.front-a.loadbalancer.server.port=80" # Porta do serviçoe
      - "traefik.http.routers.front-a.rule=Host(`front-a`)"
      - "traefik.http.routers.front-a.rule=Path(`/front-a`)"
      - "traefik.http.routers.front-a.entrypoints=http"

  front-b:
    image: nginx
    ports:
     - "9002:80"
    networks:
      - reverse-proxy-traefik
    environment:
     - NGINX_PORT=80
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.front-b.loadbalancer.server.port=80" # Porta do serviço
      - "traefik.http.routers.front-b.rule=Host(`front-b`)"
      - "traefik.http.routers.front-b.rule=Path(`/front-b`)"
      - "traefik.http.routers.front-b.entrypoints=http"

networks:
  reverse-proxy-traefik:
    external: true
